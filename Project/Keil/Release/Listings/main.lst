C51 COMPILER V9.60.7.0   MAIN                                                              08/26/2024 14:26:31 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Release\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000C) INCDI
                    -R(..\..\Libraries\Include;..\..\User) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\main.lst) OBJECT(.\Release
                    -\Objects\main.obj)

line level    source

   1          /**
   2           ******************************************************************************
   3           * @file    main.c
   4           * @author  HUGE-IC Application Team
   5           * @version V1.0.0
   6           * @date    02-09-2022
   7           * @brief   Main program body
   8           ******************************************************************************
   9           * @attention
  10           *
  11           * <h2><center>&copy; COPYRIGHT 2021 HUGE-IC</center></h2>
  12           *
  13           * 版权说明后续补上
  14           *
  15           ******************************************************************************
  16           */
  17          
  18          /* Includes ------------------------------------------------------------------*/
  19          #include "my_config.h"
  20          #include "include.h"
  21          #include <math.h>
  22          #include <stdio.h>
  23          
  24          float step = 70;
  25          float mi;  // 幂
  26          float rus; // 10的幂次方
  27          float r_ms = 0;
  28          // #define USER_BAUD (115200UL)
  29          // #define USER_UART_BAUD ((SYSCLK - USER_BAUD) / (USER_BAUD))
  30          
  31          #if USE_MY_DEBUG
              
              #define UART0_BAUD 115200
              #define USER_UART0_BAUD ((SYSCLK - UART0_BAUD) / (UART0_BAUD))
              // 重写puchar()函数
              char putchar(char c)
              {
                  while (!(UART0_STA & UART_TX_DONE(0x01)))
                      ;
                  UART0_DATA = c;
                  return c;
              }
              
              void my_debug_config(void)
              {
                  // P15作为发送引脚
                  P1_MD1 &= (GPIO_P15_MODE_SEL(0x3));
                  P1_MD1 |= GPIO_P15_MODE_SEL(0x1);            // P15配置为输出模式
                  FOUT_S15 |= GPIO_FOUT_UART0_TX;              // 配置为UART0_TX
                  UART0_BAUD1 = (USER_UART0_BAUD >> 8) & 0xFF; // 配置波特率高八位
                  UART0_BAUD0 = USER_UART0_BAUD & 0xFF;        // 配置波特率低八位
                  UART0_CON0 = UART_STOP_BIT(0x0) |
                               UART_EN(0x1); // 8bit数据，1bit停止位
C51 COMPILER V9.60.7.0   MAIN                                                              08/26/2024 14:26:31 PAGE 2   

              }
              #endif // USE_MY_DEBUG
  56          
  57          void main(void)
  58          {
  59   1          // 看门狗默认打开, 复位时间2s
  60   1          WDT_KEY = WDT_KEY_VAL(0xDD); //  关闭看门狗 (如需配置看门狗请查看“WDT\WDT_Reset”示例)
  61   1      
  62   1          system_init();
  63   1      
  64   1      #if USE_MY_DEBUG
                  // 初始化打印
                  my_debug_config();
              
              #endif
  69   1      
  70   1          // 过压保护  16脚-----P14
  71   1          //          P1_MD1   &= ~GPIO_P14_MODE_SEL(0x03);
  72   1          //          P1_MD1   |=  GPIO_P14_MODE_SEL(0x01);
  73   1          //          FOUT_S14  =  GPIO_FOUT_AF_FUNC;
  74   1          ///////////////////////////////////////////
  75   1      
  76   1      #if 1
  77   1          adc_pin_config(); // 配置使用到adc的引脚
  78   1          // adc_sel_pin(ADC_SEL_PIN_GET_TEMP);
  79   1          tmr0_config(); // 配置定时器，默认关闭
  80   1          pwm_init();    // 配置pwm输出的引脚
  81   1          tmr1_config();
  82   1      #endif
  83   1      
  84   1      // ===================================================================
  85   1      #if 1        // 开机缓慢启动（PWM信号变化平缓）
  86   1          P14 = 0; // 16脚先输出低电平
  87   1          c_duty = 0;
  88   1          while (c_duty < 6000)
  89   1          {
  90   2              if (jump_flag == 1)
  91   2              {
  92   3                  break;
  93   3              }
  94   2              if (c_duty < 6000)
  95   2              {
  96   3                  mi = (step - 1) / (253 / 3) - 1;
  97   3                  step += 0.5;
  98   3                  c_duty = pow(5, mi) * 60;
  99   3              }
 100   2              if (c_duty >= 6000)
 101   2              {
 102   3                  c_duty = 6000;
 103   3              }
 104   2              // printf("c_duty %d\n",c_duty);
 105   2              set_pwm_duty();
 106   2              delay_ms(16); // 每16ms调整一次PWM的脉冲宽度
 107   2          }
 108   1      #endif
 109   1          // ===================================================================
 110   1      
 111   1          while (1)
 112   1          {
 113   2              adc_scan();                       // 检测热敏电阻一端的电压值（每次循环，至少要60ms）
 114   2              set_duty();                       // 设定到要调节到的脉宽
 115   2              according_pin9_to_adjust_pin16(); // 根据9脚的电压来设定16脚的电平
C51 COMPILER V9.60.7.0   MAIN                                                              08/26/2024 14:26:31 PAGE 3   

 116   2              // Adaptive_Duty(); // 调节脉宽
 117   2          }
 118   1      }
 119          
 120          /**
 121           * @}
 122           */
 123          
 124          /*************************** (C) COPYRIGHT 2022 HUGE-IC ***** END OF FILE *****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    241    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
